@page "/createSurvey"
@rendermode InteractiveServer

@using WebAPI.models


<head>
    <link href="survey.css" rel="stylesheet" />
</head>

<PageTitle>Create Survey</PageTitle>

<div class="container">
    <!-- Left Section -->
    <div class="left-content">
        <div class="header">
            <h3>Create Survey</h3>
        </div>

        <div class="card">
            <div class="form-group field">
                <label>Title</label>
                <input type="text" placeholder="Enter Survey Title" @bind="title" @bind:event="oninput" /> 
                
                <label>Description</label>
                <input type="text" placeholder="Enter Survey Description" @bind="description" @bind:event="oninput" /> 
            </div>
        </div>

         <div class="questions">
            
        @foreach (var question in questions)
        {
            <div class="card">
                <!-- X Button for Removing Question -->
            <button class="remove-question-btn" @onclick="() => RemoveQuestion(question)">X</button>
                <h4>@question.Text</h4>
                <input type="text" placeholder="Enter Question" @bind="question.Text" @bind:event="oninput" />

                @if (question.Type == "MultipleChoice" || question.Type == "Checkboxes")
                {
                    <div class="options">
                        @for (int i = 0; i < question.Options.Count; i++)
                        {
                            <div>
                                @if (question.Type == "MultipleChoice")
                                {
                                    <input type="radio" disabled />
                                }
                                else if (question.Type == "Checkboxes")
                                {
                                    <input type="checkbox" disabled />
                                }
                                <input type="text" placeholder="Enter Option" @bind="question.Options[i]" />
                                <button @onclick="() => RemoveOption(question, question.Options[i])">X</button>
                            </div>
                        }
                    </div>
                    <button @onclick="(() => AddOption(question))" class="add-option-btn">Add Option</button>
                }
                else if (question.Type == "ShortAnswer")
                {
                    <input type="text" placeholder="Short Answer (Respondent will type here)" disabled />
                }
            </div>
        }
    </div>
</div>

    <!-- Right Section (Purple Box) -->
    <div class="right-content">
        
        <div class="button-box">
             <!-- Dropdown and Add Button -->
        <div class="dropdown-container">
            <select @bind="selectedQuestionType">
                <option value="MultipleChoice">Multiple Choice</option>
                <option value="Checkboxes">Checkboxes</option>
                <option value="ShortAnswer">Short Answer</option>
            </select>
            <button @onclick="AddQuestion" class="acceptbtn">Add Question</button>
        </div>
        
        
            <button @onclick="Create" class="acceptbtn">Create</button>
        </div>
    </div>
</div>

@code {
    private string title = "";
    private string description = "";
    private List<Question> questions = new List<Question>();
        //temp task
          private async Task Create()
    {
        Console.WriteLine("Survey Created!");
    }

    /*private async Task Create()
    {
        var newSurvey = new Survey
        {
            Title = title,
            Description = description,
            Questions = questions
        };

        var surveys = SurveyService.LoadSurveys();
        surveys.Add(newSurvey);
        SurveyService.SaveSurveys(surveys);

        Console.WriteLine($"Survey Created: {newSurvey.Title}");
        ResetForm();
    }

    private void ResetForm()
    {
        title = "";
        description = "";
        questions.Clear();
    }*/
 /* private void AddQuestion()
{
    questions.Add(new Question { Text = "", Options = new List<string>() });
}*/
private string selectedQuestionType = "MultipleChoice"; // Default option

private void AddQuestion()
{
    questions.Add(new Question
    {
        Text = "",
        Type = selectedQuestionType,
        Options = selectedQuestionType == "ShortAnswer" ? null : new List<string>()
    });
}

    private void RemoveQuestion(Question question)
    {
        questions.Remove(question);
    }

    private void AddOption(Question question)
    {
        question.Options.Add("");
    }

    private void RemoveOption(Question question, string option)
    {
        question.Options.Remove(option);
    }
}
