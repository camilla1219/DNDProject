@page "/viewSurvey"
@rendermode InteractiveServer
@inject HttpClient Http
@using WebAPI.models

<PageTitle>View Survey</PageTitle>

<div class="card">
    <h3>View Survey</h3>
    <div class="form-group field">
        <label>Survey ID</label>
        <input type="text" @bind="surveyId" @bind:event="oninput" placeholder="Enter Survey ID" />
    </div>
    <div class="button-row">
        <button @onclick="Search" class="searchbtn">Search</button>
    </div>

    @if (loading)
    {
        <div>Loading...</div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="error">@errorMessage</div>
    }
    else if (survey != null)
    {
        <div class="search-result">
            <h4>Survey Details</h4>
            <p><strong>Title:</strong> @survey.Title</p>
            <p><strong>Description:</strong> @survey.Description</p>
            <h5>Questions</h5>
            <ul>
                @foreach (var question in survey.Questions)
                {
                    <li>@question.Text</li>
                }
            </ul>
        </div>
    }
</div>

@code {
    private string surveyId = "";
    private Survey? survey = null;
    private bool loading = false;
    private string errorMessage = "";

    private async Task Search()
    {
        survey = null;
        errorMessage = "";
        loading = true;

        try
        {
            if (int.TryParse(surveyId, out var id))
            {
                survey = await Http.GetFromJsonAsync<Survey>($"api/Survey/{id}");
            }
            else
            {
                errorMessage = "Please enter a valid numeric Survey ID.";
            }
        }
        catch (HttpRequestException ex)
        {
            errorMessage = "Survey not found or an error occurred while fetching the survey.";
            Console.WriteLine(ex.Message);
        }
        finally
        {
            loading = false;
        }
    }
}
